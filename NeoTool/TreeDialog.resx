<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACo
        CwAAAk1TRnQBSQFMAgEBAgEAAQgBAAEIAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEFIAA1cBhAN/Af4DfwH+A34B/wN9Af8BfQF8AX0B/wN9Af8BfAJ9Af8DfgH/
        A34B/wOAAf8DgAH/A4AB/wOAAf8BfgKAAf8DVQF/gAADIAEwAyEBMwMhATMDIQEzAyEBMwMhATMDIQEz
        AyEBMwMhATMDIQEzAyEBMwMhATMDIQEzAx8BLwgAA3oB8AHQAsoB/wHTAcwBzQH/AeMC4AH/AfQC8QL/
        Av4F/wH4AvUB/wHfAtwB/wHIAsMB/wHCAr4B/wHCAr4B/wHCAr4B/wHCAr4B/wHPAsoB/wN2AfCAAAFH
        AZMBxgHyAUIBmAHSAf8BPwGUAdAB/wE9AZIBzwH/AT0BkgHOAf8BPgGSAc4B/wE+AZIBzgH/AT4BkgHO
        Af8BPgGSAc4B/wE+AZIBzgH/AT4BkgHOAf8BPgGSAc4B/wE+AZMBzwH/AUQBjgHCAfADCgEOBAABegF7
        AXoB7QHHAcEBwgH/AckCwwH/AdsC1wH/AewB6QHqAf8B+AL2Af8B/AL6Af8B8ALtAf8B1gLSAf8BvgK4
        Af8BuQK0Af8BuQK0Af8BuQK0Af8BuAKzAf8BxgLBAf8DdQHtgAABQwGZAdIB/wE+AZQB0AH/AasB+wL/
        AZsB8wL/AZIB8QL/AZMB8QL/AZMB8QL/AZMB8QL/AZMB8QL/AZMB8QL/AZMB8QL/AZMB8QL/AaYB+AL/
        AWQBuAHjAf8BOAFAAUYBXwQAA3oB7gHEAb4BvwH/AccCwQH/AdoC1gH/AesB6AHpAf8B+AL2Af8B/AL6
        Af8B8ALtAf8B1ALQAf8BuwK1Af8BtgKxAf8BtgKxAf8BtgKxAf8BtgKwAf8BwwK+Af8DdgHugAABQgGY
        AdIB/wFOAaYB2QH/AY4B2gH1Af8BogHuAv8BggHlAf4B/wGEAeUB/gH/AYQB5QH+Af8BhQHmAf4B/wGF
        AeYB/gH/AYUB5gH+Af8BhQHmAf4B/wGEAeYB/gH/AZYB6wL/AYwB2AH1Af8BRwFwAYwBuAQAA3IBywP8
        Af8B+AL2Af8B+wL6Af8D/gr/Av4B/wP6Af8B9gL1Af8D9AH/AfUC9AH/AfUC9AH/A/QB/wH9AvsB/wFv
        AnAByYAAAUEBlgHRAf8BagG+AegB/wFsAb0B5gH/AbsB8gL/AXQB3gH9Af8BdgHeAfwB/wF3Ad4B/AH/
        AXoB3wH8Af8BfAHfAfwB/wF8Ad8B/AH/AXwB3wH8Af8BewHfAfwB/wGAAeAB/QH/Aa0B8AL/AUwBnQHT
        Af8DCgEOA08BcgGIAYQBhQH/AZECjgH/AZ0CmwH/AagCpgH/AbECrgH/AbMCsQH/AakCpwH/AZcClQH/
        AYgChAH/AYMCfQH/AYMCfgH/AYMCfgH/AYMCfgH/AYMCfgH/A08Bc4AAAT8BlQHQAf8BigHXAfUB/wFD
        AaEB2AH/Ad0B/QL/AdoB+gL/AdsB+gL/Ad4B+gL/AXMB3AH8Af8BdQHbAfoB/wF0AdoB+gH/AXMB2gH6
        Af8BcwHaAfoB/wFxAdkB+gH/AaEB6AL/AXsBvwHmAf8BNwFAAUYBXgF6AnsB8QHSAc0BzgH/AdUBzwHQ
        Af8B4wLgAf8B8wLwAf8B/QL7Bf8B9QLzAf8B3wLcAf8BygLHAf8BxgLBAf8BxgLBAf8BxgLBAf8BxgLB
        Af8B0gLOAf8DdQHwgAABPQGUAdAB/wGrAfAC/wFDAZ0B1gH/ATUBjAHLAf8BNQGMAcsB/wE1AYwBywH/
        ATYBiwHLAf8BWwG+AeoB/wFuAdkB+wH/AWkB1gH6Af8BZwHVAfkB/wFmAdQB+QH/AWUB1AH5Af8BggHe
        AfwB/wGqAeAB9gH/AUcBcAGMAbkBegF7AXoB7QHHAcABwQH/AckCwwH/AdsC1wH/AewB6QHqAf8B+AL2
        Af8B/AL6Af8B8ALtAf8B1gLSAf8BvgK4Af8BuAKzAf8BuQK0Af8BuQK0Af8BuAKzAf8BxgLAAf8DdQHt
        gAABPAGSAc8B/wG5AfQC/wFyAdsB+wH/AWoBzAHyAf8BawHNAfMB/wFrAc4B8wH/AWwBzgHzAf8BRgGc
        AdQB/wFVAboB6QH/AdoB+AL/AdcB9gL/AdYB9gL/AdUB9gL/AdUB9wL/AdsB/AL/AT0BlAHQAf8DegHu
        AcQBvgG/Af8BxwLBAf8B2gLWAf8B6wHoAekB/wH4AvYB/wH8AvoB/wHwAu0B/wHUAtAB/wG7ArUB/wG2
        ArAB/wG2ArEB/wG2ArEB/wG1ArAB/wHDAr4B/wN2Ae6AAAE7AZIBzwH/AcAB8wL/AXAB2gH7Af8BcwHb
        AfsB/wF0AdsB/AH/AXQB2wH8Af8BdQHcAfwB/wFyAdoB+gH/AUMBnAHUAf8BNgGMAcsB/wE1AYwBywH/
        ATQBjAHMAf8BMwGNAcwB/wE3AZABzgH/ATwBlAHQAf8BSAGRAcIB6wNwAcMB/wH+Af0B/wH5AvgB/wH8
        AvsB/wL+Af0K/wL+Af8B+wL6Af8D9wH/A/cB/wP3Af8D9wH/A/cC/wL+Af8BbgJvAcOAAAE6AZIBzwH/
        AcoB9gL/AWgB1QH5Af8BawHVAfkB/wFqAdUB+QH/AWgB1QH5Af8BaAHVAfoB/wFpAdcB+wH/AWcB1AH6
        Af8BXQHHAfEB/wFdAccB8gH/AVwByAHyAf8BtAHjAfgB/wE8AZQB0AH/AT0BSwFUAWkEAANbAY0BkwGP
        AZAB/wGcAZcBmQH/AaYCpAH/AbABrgGvAf8BuAK2Af8BuQK4Af8BsQKvAf8BoAKeAf8BkgKPAf8BiwKI
        Af8BjAKJAf8BjAKJAf8BjAKJAf8BjAKJAf8DUgF3gAABOgGSAc8B/wHVAfcC/wFfAdEB+QH/AWAB0AH4
        Af8BtAHrAf0B/wHZAfYC/wHaAfgC/wHaAfgC/wHbAfkC/wHcAfoC/wHcAfoC/wHcAfsC/wHgA/8BPQGV
        AdAB/wEkASgBKgEzBAADegHwAdABygHLAf8B0gLNAf8B4gHeAd8B/wHxAe4B7wH/Af0B+wH6Bf8B9QLx
        Af8B3gLbAf8BxwLDAf8BwwK+Af8BxAK/Af8BxAK/Af8BwwK+Af8BzwLKAf8BdQJ2AfCAAAE8AZQB0AH/
        AdwB/AL/AdgB9wL/AdgB9wL/AdsB+gL/ATQBjgHNAf8BOAGRAc4B/wE5AZIBzwH/ATkBkgHPAf8BOQGS
        Ac8B/wE5AZIBzwH/AToBkgHPAf8BPAGUAdAB/wFKAYgBsQHXCAABegF7AXoB7QHHAcABwgH/AckCwwH/
        AdsC1wH/AewB6QHqAf8B+AL2Af8B/AL6Af8B8ALtAf8B1gLSAf8BvgK4Af8BuAK0Af8BuQK0Af8BuQK0
        Af8BuAKzAf8BxgLAAf8DdQHtgAABTAF1AZEBsAE8AZQB0AH/ATkBkgHPAf8BOQGSAc8B/wE8AZQB0AH/
        AUoBhAGsAdIoAAF6AXsBegHtAcUBvwHAAf8ByALBAf8B2gLWAf8B6wHoAekB/wH4AvYB/wH8AvoB/wHw
        Au0B/wHVAtEB/wG8ArYB/wG2ArEB/wG3ArIB/wG3ArIB/wG2ArEB/wHEAr8B/wN1Ae3AAAN4AvAB7wHu
        Af8B7gLrAf8B9QL0Af8B/QL8Cf8B/gL9Af8B8wLyAf8B6QLnAf8B5gLkAf8B5gLkAf8B5gLkAf8B5gLk
        Af8B8ALuAf8BcwJ0AfDAAANVAX0DeAHwA3gB7QN4Ae4DdwHuA3cB7gN3Ae4DdwHuA3gB7gN4Ae4DeAHu
        A3gB7gN4Ae4DeAHuA3kB8QNXAYGAAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/
        AQAC/wcAAQMHAAEBBwABAQcAAQEvAAEBBwABAQcAAQMGAAEDAf8GAAL/BgAC/wYACw==
</value>
  </data>
</root>